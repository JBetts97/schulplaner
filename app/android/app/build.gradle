def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def keystorePropertiesFile = rootProject.file("../../keys/key-release.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    signingConfigs {
        config1 {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'

    }

    defaultConfig {
        applicationId "com.xla.school"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 614
        versionName "10.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.config1
        }
        debug {
            signingConfig signingConfigs.config1
        }
    }

    flavorDimensions "flavor-type"

    productFlavors {
        production {
            dimension "flavor-type"
        }
        development {
            dimension "flavor-type"
            //applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }

    }

}

flutter {
    source '../..'
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'androidx.core:core:1.3.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'

    implementation 'com.google.firebase:firebase-firestore-ktx:21.4.3'
    
    implementation 'com.google.code.gson:gson:2.8.6'
}
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'